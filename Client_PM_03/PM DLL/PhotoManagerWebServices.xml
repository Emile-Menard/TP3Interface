<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PhotoManagerWebServices</name>
    </assembly>
    <members>
        <member name="T:BitmapExtension.ExtBitmap">
            <summary>
            Classe d'extension de Bitmap pour les conversions en Base64 pour les échanges Web d'images en format JSON
            </summary>
        </member>
        <member name="M:BitmapExtension.ExtBitmap.ToBase64String(System.Drawing.Bitmap,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Extension de Bitmap, conversion de bitmap en format Base64
            </summary>
            <param name="bmp">bitmap à convertir</param>
            <param name="imageFormat">type d'encodage de l'image</param>
            <returns></returns>
        </member>
        <member name="M:BitmapExtension.ExtBitmap.ToBase64ImageTag(System.Drawing.Bitmap,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Extension de Bitmap, conversion de bitmap en format Base64 encapsulé dans une balise Html img
            </summary>
            <param name="bmp">bitmap à convertir</param>
            <param name="imageFormat">type d'encodage  de l'image</param>
            <returns></returns>
        </member>
        <member name="M:BitmapExtension.ExtBitmap.Base64StringToBitmap(System.String)">
            <summary>
            Conversion d'une image en format Base64 en un object de classe Bitmap
            </summary>
            <param name="base64String"></param>
            <returns></returns>
        </member>
        <member name="T:PhotoManagerClient.ExistResponse">
            <summary>
            Web service response
            </summary>
        </member>
        <member name="T:PhotoManagerClient.MatchResponse">
            <summary>
            Web service response
            </summary>
        </member>
        <member name="T:PhotoManagerClient.URLResponse">
            <summary>
            Web service response
            </summary>
        </member>
        <member name="T:PhotoManagerClient.GUIDResponse">
            <summary>
            Web service response
            </summary>
        </member>
        <member name="T:PhotoManagerClient.DeleteResponse">
            <summary>
            Web service response
            </summary>
        </member>
        <member name="T:PhotoManagerClient.DBPhotosWebServices">
            <summary>
            Interface aux services Web du site PhotoManager
            
            Auteur: Nicolas Chourot
            </summary>
        </member>
        <member name="M:PhotoManagerClient.DBPhotosWebServices.Login(System.String,System.String)">
            <summary>
            Demande d'authentification
            </summary>
            <param name="userName">Nom d'usager</param>
            <param name="password">Mot de passe</param>
            <returns>Instance de classe User</returns>
        </member>
        <member name="M:PhotoManagerClient.DBPhotosWebServices.UserNameExist(System.String)">
            <summary>
            Vérifier l'existance du nom d'usager
            </summary>
            <param name="userName">Nom d'usager</param>
            <returns>Vrai si l'usager de nom userName existe</returns>
        </member>
        <member name="M:PhotoManagerClient.DBPhotosWebServices.UserNameAlreadyUsed(System.Int32,System.String)">
            <summary>
            Vérifier si un nom d'usager est déjà utilisé par un usager d'Id différent de celui passé en paramètre
            </summary>
            <param name="id">Id de l'usager demandeur</param>
            <param name="userName">Nom d'usager</param>
            <returns>Vrai si le nom userName est déjà utilisé mise à part l'usager id</returns>
        </member>
        <member name="M:PhotoManagerClient.DBPhotosWebServices.PasswordMatch(System.String,System.String)">
            <summary>
            Vérificateur du mot de passe d'un usager
            </summary>
            <param name="userName">Nom d'usager</param>
            <param name="password">Mot de passe à vérifier</param>
            <returns>Vrai si le mot passe est correcte</returns>
        </member>
        <member name="M:PhotoManagerClient.DBPhotosWebServices.CreateUser(PhotoManagerClient.User)">
            <summary>
            Création d'usager
            </summary>
            <param name="user">Référence sur l'objet de classe User à créer</param>
            <returns>Instance de classe User avec son Id mise à jour</returns>
        </member>
        <member name="M:PhotoManagerClient.DBPhotosWebServices.GetUser(System.Int32)">
            <summary>
            Obtenir un objet de classe User contentant les informations d'un usager désigné par id
            </summary>
            <param name="id">Id de l'usager recherché</param>
            <returns>Instance de classe User trouvé</returns>
        </member>
        <member name="M:PhotoManagerClient.DBPhotosWebServices.UpdateUser(PhotoManagerClient.User)">
            <summary>
            Mise à jour de l'usager décrit par l'objet de classe User passé en paramètre
            </summary>
            <param name="user">Référence sur l'objet de classe User à mettre à jour</param>
            <returns>Instance de classe User</returns>
        </member>
        <member name="M:PhotoManagerClient.DBPhotosWebServices.GetAllUsers">
            <summary>
            Obtenir la liste d'usagers. Notez que le mot de passe est caché.
            </summary>
            <returns>Liste d'instances de classe User</returns>
        </member>
        <member name="M:PhotoManagerClient.DBPhotosWebServices.DeleteUser(System.Int32)">
            <summary>
            Effacer l'usager désigné par id
            </summary>
            <param name="id">Id de l'usager à effacer</param>
            <returns>Vrai si le retrait a été effectué</returns>
        </member>
        <member name="M:PhotoManagerClient.DBPhotosWebServices.CreatePhoto(PhotoManagerClient.Photo)">
            <summary>
            Création de photo
            </summary>
            <param name="photo">Référence d'objet de classe Photo détenant les informations de la photo à créer</param>
            <returns>Instance de classe Photo avec son Id mis à jour</returns>
        </member>
        <member name="M:PhotoManagerClient.DBPhotosWebServices.UpdatePhoto(PhotoManagerClient.Photo)">
            <summary>
            Mise à jour de photo
            </summary>
            <param name="photo">Référence d'objet de classe Photo détenant les informations de la photo à metter à jour</param>
            <returns>Instance de classe Photo</returns>
        </member>
        <member name="M:PhotoManagerClient.DBPhotosWebServices.UpLoadImageToServer(System.Drawing.Bitmap,System.String)">
            <summary>
            Téléversement d'une image. Notez que deux images seront conservées sur le serveur:
            Une version miniature et l'autre n'excédant pas la taille de 1024 X 1024 pixels
            </summary>
            <param name="image">Référence sur l'image</param>
            <param name="previousGUID">Ancien GUID de l'image</param>
            <returns>Nouveau GUID de l'image</returns>
        </member>
        <member name="M:PhotoManagerClient.DBPhotosWebServices.GetThumbnailImage(System.String)">
            <summary>
            Obtient la version miniature de l'image désignée par son GUID
            </summary>
            <param name="GUID">GUID de l'image</param>
            <returns></returns>
        </member>
        <member name="M:PhotoManagerClient.DBPhotosWebServices.GetOriginalImage(System.String)">
            <summary>
            Obtient la version originale de l'image désignée par son GUID
            </summary>
            <param name="GUID">GUID de l'image</param>
            <returns></returns>
        </member>
        <member name="M:PhotoManagerClient.DBPhotosWebServices.DeletePhoto(PhotoManagerClient.Photo)">
            <summary>
            Effacer la photo 
            </summary>
            <param name="photo">Référence sur l'objet de classe Photo qui désigne la photo à effacer</param>
        </member>
        <member name="M:PhotoManagerClient.DBPhotosWebServices.GetServerImagesURLBase">
            <summary>
            Obtenir le répertoire Web de base pour les images
            </summary>
            <returns>URL</returns>
        </member>
        <member name="M:PhotoManagerClient.DBPhotosWebServices.GetAllPhotos">
            <summary>
            Obtenir la liste de toutes les photos. Notez qu'il est préférable d'obtenir les photos via GetFilteredPhotos
            </summary>
            <returns>Liste des références d'objet de classe Photo</returns>
        </member>
        <member name="M:PhotoManagerClient.DBPhotosWebServices.GetFilteredPhotos(PhotoManagerClient.PhotoFilter)">
            <summary>
            Obtenir les photos répondant aux critères de recherche établis par la référence d'objet de classe PhotoFilter
            </summary>
            <param name="photofilter">Liste de références d'objet de classe Photo</param>
            <returns></returns>
        </member>
        <member name="M:PhotoManagerClient.DBPhotosWebServices.GetPhoto(System.Int32)">
            <summary>
            Obtenir un objet de classe Photo contentant les informations d'une photo désigné par id
            </summary>
            <param name="id">Id de la photo recherchée</param>
            <returns>Instance de classe Photo trouvée</returns>
        </member>
        <member name="T:PhotoManagerClient.User">
            <summary>
            Conserve les champs d'un usager User de la base de données du server web PhotoManagerWebServer
            
            Auteur: Nicolas Chourot
            </summary>
        </member>
        <member name="P:PhotoManagerClient.User.Id">
            <summary>
            Clé de l'enregistrement
            </summary>
        </member>
        <member name="P:PhotoManagerClient.User.Name">
            <summary>
            Nom de l'usager
            </summary>
        </member>
        <member name="P:PhotoManagerClient.User.Password">
            <summary>
            Mot de passe
            </summary>
        </member>
        <member name="P:PhotoManagerClient.User.AvatarGUID">
            <summary>
            Référence chiffrée de l'image de l'avatar
            </summary>
        </member>
        <member name="M:PhotoManagerClient.User.ToString">
            <summary>
            Surchage
            </summary>
            <returns>Le nom de l'usager</returns>
        </member>
        <member name="M:PhotoManagerClient.User.ToJson">
            <summary>
            Consversion en objet JSON
            </summary>
            <returns>objet JSON</returns>
        </member>
        <member name="M:PhotoManagerClient.User.GetAvatarThumbnailImage">
            <summary>
            Retourne la référence sur l'image miniature de l'avatar de l'usager
            </summary>
            <returns></returns>
        </member>
        <member name="M:PhotoManagerClient.User.GetAvatarOriginalImage">
            <summary>
            Retourne la référence sur l'image originale de l'avatar de l'usager
            </summary>
            <returns></returns>
        </member>
        <member name="M:PhotoManagerClient.User.SetAvatarImage(System.Drawing.Image)">
            <summary>
            Régler l'image de l'avatar de l'usager
            </summary>
            <param name="image">Référence sur l'image</param>
        </member>
        <member name="M:PhotoManagerClient.User.GetAllUsers">
            <summary>
            Retourne la liste de tous les usgers 
            Note: Les mots de passes sont cachés
            </summary>
            <returns>Liste d'usagers</returns>
        </member>
        <member name="M:PhotoManagerClient.User.IsValid">
            <summary>
            Retourne vrai si les données sont cohérentes
            </summary>
            <returns></returns>
        </member>
        <member name="T:PhotoManagerClient.Photo">
            <summary>
            Conserve les champs d'une photo de la base de données du server Web PhotoManagerWebServer
            
            Auteur: Nicolas Chourot
            </summary>
        </member>
        <member name="P:PhotoManagerClient.Photo.Id">
            <summary>
            Clé de l'enregistrement
            </summary>
        </member>
        <member name="P:PhotoManagerClient.Photo.Title">
            <summary>
            Titre de la photo
            </summary>
        </member>
        <member name="P:PhotoManagerClient.Photo.Description">
            <summary>
            Description de la photo
            </summary>
        </member>
        <member name="P:PhotoManagerClient.Photo.CreationDate">
            <summary>
            Date de création de la photo
            </summary>
        </member>
        <member name="P:PhotoManagerClient.Photo.ImageGUID">
            <summary>
            Référence chiffrée de l'image de la photo
            </summary>
        </member>
        <member name="P:PhotoManagerClient.Photo.OwnerId">
            <summary>
            Id de l'usager propriétaire de la photo
            </summary>
        </member>
        <member name="P:PhotoManagerClient.Photo.Shared">
            <summary>
            Indique si la photo est partagée
            </summary>
        </member>
        <member name="P:PhotoManagerClient.Photo.Keywords">
            <summary>
            Mots-clés associés à la photo
            </summary>
        </member>
        <member name="M:PhotoManagerClient.Photo.GetThumbnailImage">
            <summary>
            Retourne la référence sur l'image miniature de la photo
            </summary>
            <returns></returns>
        </member>
        <member name="M:PhotoManagerClient.Photo.GetOriginalImage">
            <summary>
            Retourne la référence sur l'image originale de la photo
            </summary>
            <returns></returns>
        </member>
        <member name="M:PhotoManagerClient.Photo.SetImage(System.Drawing.Image)">
            <summary>
            Régler l'image de la photo
            </summary>
            <param name="image">Référence sur l'image</param>
        </member>
        <member name="M:PhotoManagerClient.Photo.DisposeImages">
            <summary>
            Effacer l'image de la photo
            </summary>
        </member>
        <member name="M:PhotoManagerClient.Photo.ToJson">
            <summary>
            Conversion en JSON
            </summary>
            <returns>Object JSON</returns>
        </member>
        <member name="M:PhotoManagerClient.Photo.#ctor">
            <summary>
            Constructeur
            </summary>
        </member>
        <member name="M:PhotoManagerClient.Photo.IsValid">
            <summary>
            Retourne vrai si les données sont cohérentes
            </summary>
            <returns></returns>
        </member>
        <member name="T:PhotoManagerClient.PhotoFilter">
            <summary>
            Spécification de filtres pour la recherche de photos
            
            Auteur: Nicolas Chourot
            </summary>
        </member>
        <member name="P:PhotoManagerClient.PhotoFilter.UserIdRequester">
            <summary>
            Id de l'usager demandeur 
            </summary>
        </member>
        <member name="P:PhotoManagerClient.PhotoFilter.ExludeUserRequester">
            <summary>
            Exclure de la recherche l'usager demandeur
            </summary>
        </member>
        <member name="P:PhotoManagerClient.PhotoFilter.ShowAllUsers">
            <summary>
            Obtenir les photos de tous les usagers
            </summary>
        </member>
        <member name="P:PhotoManagerClient.PhotoFilter.ByOwnerUserId">
            <summary>
            Considérer uniquement les photos de l'usager Id
            </summary>
        </member>
        <member name="P:PhotoManagerClient.PhotoFilter.FilterByDate">
            <summary>
            Filtrer par date
            </summary>
        </member>
        <member name="P:PhotoManagerClient.PhotoFilter.StartDate">
            <summary>
            Date de départ de l'interval de recherche
            </summary>
        </member>
        <member name="P:PhotoManagerClient.PhotoFilter.EndDate">
            <summary>
            Date de fin de l'interval de recherche
            </summary>
        </member>
        <member name="P:PhotoManagerClient.PhotoFilter.FilterByKeywords">
            <summary>
            Filtrer par mots-clés
            </summary>
        </member>
        <member name="P:PhotoManagerClient.PhotoFilter.Keywords">
            <summary>
            Mots-clés à rechercher
            </summary>
        </member>
        <member name="P:PhotoManagerClient.PhotoFilter.KeywordsList">
            <summary>
            Liste des mots-clés des photos sélectionnés par GetPhotos()
            </summary>
        </member>
        <member name="P:PhotoManagerClient.PhotoFilter.UsersList">
            <summary>
            Liste de tous les usagers. Les deux premiers items représentant respectivement
            seulement les photos de l'usager demandeur, tous les usagers
            </summary>
        </member>
        <member name="F:PhotoManagerClient.PhotoFilter.No_User">
            <summary>
            Usager constant représentant le choix "Seulement les photos de l'usager demandeur"
            </summary>
        </member>
        <member name="F:PhotoManagerClient.PhotoFilter.All_Users">
            <summary>
            Usager constant représentant le choix "les photos de tous les usagers"
            </summary>
        </member>
        <member name="M:PhotoManagerClient.PhotoFilter.CleanKeywords(System.String)">
            <summary>
            Nettoyage des mots-clés en retirant les majuscules et les ponctuations ainsi que de conserver les caractères alphanumériques
            </summary>
            <param name="toClean">chaine de caractères contenant les mots-clés</param>
            <returns>Les mots-clés nettoyés</returns>
        </member>
        <member name="M:PhotoManagerClient.PhotoFilter.GetPhotos">
            <summary>
            Obtient la liste des photos répondant aux critères de recherche découlant des filtres
            </summary>
            <returns>Liste d'instances de classe Photo</returns>
        </member>
        <member name="M:PhotoManagerClient.PhotoFilter.SetUserFilter(System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Réglage de filtre par usagers
            </summary>
            <param name="exludeLoggedUser">Si vrai, exclure les photos de l'usager demandeur</param>
            <param name="showAllUsers">Si vrai, considérer les photos de tous les usagers</param>
            <param name="showedUserId">Si !=0, considérer les photos de l'usager d'id showedUserId</param>
        </member>
        <member name="M:PhotoManagerClient.PhotoFilter.SetDateFilter(System.Boolean,System.DateTime,System.DateTime)">
            <summary>
            Réglage de filtre par date
            </summary>
            <param name="filterByDate">Si vrai, filtrer par date</param>
            <param name="start">Début de l'interval de date</param>
            <param name="end">Fin de l'interval de date</param>
        </member>
        <member name="M:PhotoManagerClient.PhotoFilter.SetKeywordsFilter(System.Boolean,System.String)">
            <summary>
            Réglage de filtre par mots-clés
            </summary>
            <param name="filterByKeywords">Si vrai, filtrer par mots-clés</param>
            <param name="keywords">Mots-clés à considérer</param>
        </member>
        <member name="M:PhotoManagerClient.PhotoFilter.#ctor(System.Int32)">
            <summary>
            Constructeur
            </summary>
            <param name="loggedUserId">Id de l'usager demandeur</param>
        </member>
        <member name="M:PhotoManagerClient.PhotoFilter.ToJson">
            <summary>
            Consversion en JSON
            </summary>
            <returns>JSON</returns>
        </member>
    </members>
</doc>
